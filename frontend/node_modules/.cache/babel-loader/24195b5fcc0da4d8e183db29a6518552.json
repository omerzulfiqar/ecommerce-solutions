{"ast":null,"code":"var _jsxFileName = \"/Users/omerzulfiqar/Dev-Life/Web-Dev-Projects/ecommerce-solutions/src/components/productsGrid/productsGrid.js\";\nimport React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport items from \"../../data/data.json\";\nconst styles = {\n  paper: {\n    padding: 10,\n    textAlign: \"center\",\n    color: 'gray'\n  }\n};\nexport default class ProductsGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currData: [],\n      rowsPerPage: 5,\n      colsPerRow: 5\n    };\n\n    this.chunkData = (arr, size) => {\n      let chunkedData = [];\n      let index = 0;\n\n      while (index < arr.length) {\n        chunkedData.push(arr.slice(index, size + index));\n        index += size;\n      }\n\n      return chunkedData;\n    };\n  }\n\n  componentDidMount() {\n    const data = this.chunkData([...items], 4);\n    this.setState({\n      currData: data\n    });\n  }\n\n  render() {\n    const {\n      currData\n    } = this.state.currData;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: styles.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"xs=6 sm=3\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/omerzulfiqar/Dev-Life/Web-Dev-Projects/ecommerce-solutions/src/components/productsGrid/productsGrid.js"],"names":["React","Component","Paper","Grid","items","styles","paper","padding","textAlign","color","ProductsGrid","state","currData","rowsPerPage","colsPerRow","chunkData","arr","size","chunkedData","index","length","push","slice","componentDidMount","data","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAE;AAHF;AADM,CAAf;AAQA,eAAe,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDU,KADkD,GAC1C;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,CAFP;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAD0C;;AAAA,SAOlDC,SAPkD,GAOtC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACzB,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAG,CAAZ;;AAEA,aAAOA,KAAK,GAAGH,GAAG,CAACI,MAAnB,EAA2B;AACzBF,QAAAA,WAAW,CAACG,IAAZ,CAAiBL,GAAG,CAACM,KAAJ,CAAUH,KAAV,EAAiBF,IAAI,GAAGE,KAAxB,CAAjB;AACAA,QAAAA,KAAK,IAAIF,IAAT;AACD;;AACD,aAAOC,WAAP;AACD,KAhBiD;AAAA;;AAkBlDK,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKT,SAAL,CAAe,CAAC,GAAGX,KAAJ,CAAf,EAA2B,CAA3B,CAAb;AACA,SAAKqB,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAEY;AAAZ,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAe,KAAKD,KAAL,CAAWC,QAAhC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,MAAM,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF;AAOD;;AAjCiD","sourcesContent":["import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport items from \"../../data/data.json\";\n\nconst styles = {\n  paper: {\n    padding: 10,\n    textAlign: \"center\",\n    color: 'gray'\n  },\n};\n\nexport default class ProductsGrid extends Component {\n  state = {\n    currData: [],\n    rowsPerPage: 5,\n    colsPerRow: 5,\n  };\n\n  chunkData = (arr, size) => {\n    let chunkedData = [];\n    let index = 0;\n\n    while (index < arr.length) {\n      chunkedData.push(arr.slice(index, size + index));\n      index += size;\n    }\n    return chunkedData;\n  };\n\n  componentDidMount() {\n    const data = this.chunkData([...items], 4);\n    this.setState({ currData: data });\n  }\n\n  render() {\n    const { currData } = this.state.currData;\n\n    return (\n      <div>\n        <Grid item xs={6} sm={3}>\n          <Paper style={styles.paper}>xs=6 sm=3</Paper>\n        </Grid>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}